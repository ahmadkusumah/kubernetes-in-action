Kubernetes in Action :
- Basic Docker
- Installing Minikube -> running kubernetes locally -> single node cluster
- Installing kubernetes client (kubectl)

simple way:
brew update
brew install kubectl
brew cask install minikube docker vertualbox

## use this enviroment to use minikube docker environment
eval $(minikube docker-env)

## to revert to default docker env use the following command
eval $(docker-machine env -u)

### KUbernetes
Part 1 PODS:
creating POD:
1. create pods from yaml file :
   - kubectl create -f file_name.yml
2. see yaml/ json output from existing pod
   - kubectl get po <<pod_name>> -o <<yaml/json>>
3. see logs:
   - kubectl logs <<pod_name>>
   - if pods contain multiple container, we need to spicipy container name:
     - kubectl logs <<pod_name>> -c <<container_name>>
4. Sending request to pod:
   - setting up service, with type=LoadBalancer
   - Using port Forwarding
     kubectl port-forward <<pod_name>> host_port:pod_port -> effectively to debug a pod
5. Organizng pod can be done through labels in pod metadata file
   metadata:
     name: <pod_name>
     labels:
       creation_method: manual
       env: prod
6. show pods with label
   - kubectl get po --show-labels
7. Filtering resource by label
   - kubectl get <<pods/nodes>> -l label_key=label_value
8. Creating namespace
   - kubectl create namespace <<new_namespace>>
9. Creating namespace through yml
   apiVersion: v1
   kind: Namespace
   metadata:
     name: <<namespace new name>>

   invoke above yml using :
     - kubectl create -f custom_namespace.yml
10. deleting resources
   - delete by name
     - kubectl delete pods <pod_name>
     - kubectl delete service <svc_name>
   - delete by label
     - kubectl delete pods -l <label_key>=<label_value>
   - delete by namespace
     - kubectl delete pods -n <name_space>
   - delete everything <quite dangerous>
     - kubectl delete all --all